from cellstar_preprocessor.flows.segmentation.geometric_segmentation_annotations_preprocessing import geometric_segmentation_annotations_preprocessing
from cellstar_preprocessor.flows.segmentation.sff_segmentation_annotations_preprocessing import sff_segmentation_annotations_preprocessing
from cellstar_preprocessor.flows.segmentation.mask_segmentation_metadata_preprocessing import mask_segmentation_metadata_preprocessing
from cellstar_preprocessor.flows.segmentation.sff_segmentation_metadata_preprocessing import sff_segmentation_metadata_preprocessing
from cellstar_preprocessor.flows.segmentation.ometiff_segmentation_annotations_preprocessing import ometiff_segmentation_annotations_preprocessing
from cellstar_preprocessor.flows.segmentation.omezarr_segmentation_annotations_preprocessing import omezarr_segmentation_annotations_preprocessing
from cellstar_preprocessor.flows.segmentation.geometric_segmentation_preprocessing import geometric_segmentation_preprocessing
from cellstar_preprocessor.flows.segmentation.mask_segmentation_annotations_preprocessing import mask_segmentation_annotations_preprocessing
from cellstar_preprocessor.flows.segmentation.mask_segmentation_preprocessing import mask_segmentation_preprocessing
from cellstar_preprocessor.flows.segmentation.omezarr_segmentations_preprocessing import omezarr_segmentations_preprocessing
from cellstar_preprocessor.flows.segmentation.segmentation_downsampling import segmentation_downsampling
from cellstar_preprocessor.flows.segmentation.sff_segmentation_preprocessing import sff_segmentation_preprocessing
from cellstar_preprocessor.flows.volume.ometiff_volume_metadata_preprocessing import ometiff_volume_metadata_preprocessing
from cellstar_preprocessor.flows.segmentation.ometiff_segmentation_processing import ometiff_segmentation_processing
from cellstar_preprocessor.model.input import InputKind
from cellstar_preprocessor.model.segmentation import InternalSegmentation


def process_segmentation_annotations(s: InternalSegmentation):
    kind = s.input_kind
    if kind == InputKind.sff:
        sff_segmentation_annotations_preprocessing(s)
    elif kind == InputKind.mask:
        mask_segmentation_annotations_preprocessing(s)
    elif kind == InputKind.geometric_segmentation:
        geometric_segmentation_annotations_preprocessing(s)
    elif kind == InputKind.ometiff_segmentation:
        ometiff_segmentation_annotations_preprocessing(s)
    elif kind == InputKind.omezarr:
        omezarr_segmentation_annotations_preprocessing(s)